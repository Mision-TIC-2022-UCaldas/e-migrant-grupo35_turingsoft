// <auto-generated />
using System;
using E_Migrant.App.Persistencia.AppRepositorios;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Migrant.App.Persistencia.Migrations
{
    [DbContext(typeof(ContextApp))]
    [Migration("20211128133945_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.Credencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credenciales");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.EntidadOrg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfertaServicios")
                        .HasColumnType("int");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("Tefefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntidadesOrgs");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.HistorialServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DescripcionServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadOfrece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAcepRech")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MigranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MigranteId");

                    b.ToTable("HistorialServicios");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.NecesidadServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int>("Categorias")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MigranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MigranteId");

                    b.ToTable("NecesidadServicios");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apelidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacionLaboral")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.RegServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstadoServicio")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIncio")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaximoMigrantes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegServicios");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.Migrante", b =>
                {
                    b.HasBaseType("E_Migrant.App.Dominio.Entidades.Persona");

                    b.HasDiscriminator().HasValue("Migrante");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.HistorialServicio", b =>
                {
                    b.HasOne("E_Migrant.App.Dominio.Entidades.Migrante", null)
                        .WithMany("HistorialServicios")
                        .HasForeignKey("MigranteId");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.NecesidadServicio", b =>
                {
                    b.HasOne("E_Migrant.App.Dominio.Entidades.Migrante", null)
                        .WithMany("NecesidadServicios")
                        .HasForeignKey("MigranteId");
                });

            modelBuilder.Entity("E_Migrant.App.Dominio.Entidades.Migrante", b =>
                {
                    b.Navigation("HistorialServicios");

                    b.Navigation("NecesidadServicios");
                });
#pragma warning restore 612, 618
        }
    }
}
